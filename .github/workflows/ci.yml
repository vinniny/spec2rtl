name: spec2rtl

permissions:
  contents: read

on:
  push:
  pull_request:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install EDA (Verilator + solvers + OSS-CAD)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          set -x
          trap 'echo "[install-eda] command failed: $BASH_COMMAND"' ERR
          sudo apt-get update
          sudo apt-get install -y verilator jq python3-venv python3-pip gh boolector z3

          INFO=$(gh release view -R YosysHQ/oss-cad-suite-build --json tagName,assets --latest)
          TAG=$(printf '%s\n' "$INFO" | jq -r '.tagName // .tag_name // empty')
          ASSET=$(printf '%s\n' "$INFO" | jq -r '
            .assets[]?.name // empty
            | select(test("^oss-cad-suite-.*(linux|ubuntu).*(x64|x86_64).*(\\.tar\\.xz|\\.tgz)$"))
            | select(contains("musl") | not)
          ' | head -n1)
          if [ -z "$ASSET" ]; then
            echo "[install-eda] No matching OSS-CAD asset. Available:"
            printf '%s\n' "$INFO" | jq -r '.assets[]?.name // empty'
            exit 1
          fi
          gh release download -R YosysHQ/oss-cad-suite-build "$TAG" -p "$ASSET" -O "/tmp/$ASSET"

          mkdir -p "$GITHUB_WORKSPACE/oss-cad-suite"
          case "$ASSET" in
            *.tar.xz) tar -xJf "/tmp/$ASSET" -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1 ;;
            *.tgz)    tar -xzf "/tmp/$ASSET" -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1 ;;
          esac

          echo "$GITHUB_WORKSPACE/oss-cad-suite/bin" >> "$GITHUB_PATH"
          echo "YOSYS_SV_BIN=$(command -v yosys || echo $GITHUB_WORKSPACE/oss-cad-suite/bin/yosys)" >> "$GITHUB_ENV"
          echo "UHDM=0" >> "$GITHUB_ENV"

          verilator --version
          sby --version
          "$GITHUB_WORKSPACE/oss-cad-suite/bin/yosys" -V | head -n1
      - uses: actions/cache@v4
          sudo apt-get update
          sudo apt-get install -y verilator jq python3-venv python3-pip gh boolector z3

          INFO=$(gh release view -R YosysHQ/oss-cad-suite-build --json tagName,assets --latest)
          TAG=$(printf '%s\n' "$INFO" | jq -r '.tagName // .tag_name // empty')
          ASSET=$(printf '%s\n' "$INFO" | jq -r '
            .assets[]?.name // empty
            | select(test("^oss-cad-suite-.*(linux|ubuntu).*(x64|x86_64).*(\\.tar\\.xz|\\.tgz)$"))
            | select(contains("musl") | not)
          ' | head -n1)
          if [ -z "$ASSET" ]; then
            echo "[install-eda] No matching OSS-CAD asset. Available:"
            printf '%s\n' "$INFO" | jq -r '.assets[]?.name // empty'
            exit 1
          fi
          gh release download -R YosysHQ/oss-cad-suite-build "$TAG" -p "$ASSET" -O "/tmp/$ASSET"

          mkdir -p "$GITHUB_WORKSPACE/oss-cad-suite"
          case "$ASSET" in
            *.tar.xz) tar -xJf "/tmp/$ASSET" -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1 ;;
            *.tgz)    tar -xzf "/tmp/$ASSET" -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1 ;;
          esac

          echo "$GITHUB_WORKSPACE/oss-cad-suite/bin" >> "$GITHUB_PATH"
          echo "YOSYS_SV_BIN=$(command -v yosys || echo $GITHUB_WORKSPACE/oss-cad-suite/bin/yosys)" >> "$GITHUB_ENV"
          echo "UHDM=0" >> "$GITHUB_ENV"

          verilator --version
          sby --version
          "$GITHUB_WORKSPACE/oss-cad-suite/bin/yosys" -V | head -n1

  full:
    runs-on: ubuntu-latest
    needs: smoke
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install EDA (Verilator + solvers + OSS-CAD)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          set -x
          trap 'echo "[install-eda] command failed: $BASH_COMMAND"' ERR
          sudo apt-get update
          sudo apt-get install -y verilator jq python3-venv python3-pip gh boolector z3

          INFO=$(gh release view -R YosysHQ/oss-cad-suite-build --json tagName,assets --latest)
          TAG=$(printf '%s\n' "$INFO" | jq -r '.tagName // .tag_name // empty')
          ASSET=$(printf '%s\n' "$INFO" | jq -r '
            .assets[]?.name // empty
            | select(test("^oss-cad-suite-.*(linux|ubuntu).*(x64|x86_64).*(\\.tar\\.xz|\\.tgz)$"))
            | select(contains("musl") | not)
          ' | head -n1)
          if [ -z "$ASSET" ]; then
            echo "[install-eda] No matching OSS-CAD asset. Available:"
            printf '%s\n' "$INFO" | jq -r '.assets[]?.name // empty'
            exit 1
          fi
          gh release download -R YosysHQ/oss-cad-suite-build "$TAG" -p "$ASSET" -O "/tmp/$ASSET"

          mkdir -p "$GITHUB_WORKSPACE/oss-cad-suite"
          case "$ASSET" in
            *.tar.xz) tar -xJf "/tmp/$ASSET" -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1 ;;
            *.tgz)    tar -xzf "/tmp/$ASSET" -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1 ;;
          esac

          echo "$GITHUB_WORKSPACE/oss-cad-suite/bin" >> "$GITHUB_PATH"
          echo "YOSYS_SV_BIN=$(command -v yosys || echo $GITHUB_WORKSPACE/oss-cad-suite/bin/yosys)" >> "$GITHUB_ENV"
          echo "UHDM=0" >> "$GITHUB_ENV"

          verilator --version
          sby --version
          "$GITHUB_WORKSPACE/oss-cad-suite/bin/yosys" -V | head -n1
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Python deps
        run: |
          set -euo pipefail
          set -x
          trap 'echo "[python-deps] command failed: $BASH_COMMAND"' ERR
          if [ ! -f requirements.lock ] && [ ! -f requirements.txt ]; then
            echo "No requirements file found!" >&2
            exit 1
          fi
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          if [ -f requirements.lock ]; then
            pip install -r requirements.lock
            echo "Installed dependencies from requirements.lock"
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
            echo "Installed dependencies from requirements.txt"
          fi
          pip list
      - name: UHDM synth + formal + mutate
        env:
          REPORTS_DIR: reports/ci
          SEED: 12345
          POLICIES: policies.ci.yml
        run: |
          set -euo pipefail
          set -x
          trap 'echo "[full-flow] command failed: $BASH_COMMAND"' ERR
          . .venv/bin/activate
          make quick
          echo "make quick completed"
          make synth
          echo "make synth completed"
          make formal_core || { echo "make formal_core failed (continuing per policy)"; true; }
          make mutate
          echo "make mutate completed"
          python3 scripts/check_gates.py --policies "$POLICIES" --reports "$REPORTS_DIR"
          echo "check_gates completed"
      - name: Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: full-reports
          path: reports/ci/**
