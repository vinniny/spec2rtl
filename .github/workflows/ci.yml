name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install EDA toolchain
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y verilator jq python3-venv python3-pip gh

          INFO=$(gh release view -R YosysHQ/oss-cad-suite-build --json tagName,assets)
          TAG=$(printf "%s\n" "$INFO" | jq -r '.tagName')
          ASSET=$(printf "%s\n" "$INFO" | jq -r '.assets[].name' \
            | grep -E '^oss-cad-suite-linux-x64.*\.(tar\.xz|tgz)$' \
            | head -n1)

          test -n "$TAG"   || { echo "No release tag found"; exit 1; }
          test -n "$ASSET" || { echo "No linux-x64 asset found"; exit 1; }

          gh release download -R YosysHQ/oss-cad-suite-build "$TAG" -p "$ASSET" \
            -O "/tmp/$ASSET"

          MIN_BYTES=5000000
          ACT_BYTES=$(stat -c%s "/tmp/$ASSET" || echo 0)
          if [ "$ACT_BYTES" -lt "$MIN_BYTES" ]; then
            echo "Downloaded asset too small ($ACT_BYTES bytes)"; exit 2
          fi

          mkdir -p "$GITHUB_WORKSPACE/oss-cad-suite"
          case "$ASSET" in
            *.tar.xz) tar -xJf "/tmp/$ASSET" -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1 ;;
            *.tgz)    tar -xzf "/tmp/$ASSET" -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1 ;;
            *) echo "Unknown archive type: $ASSET"; exit 3 ;;
          esac

          echo "$GITHUB_WORKSPACE/oss-cad-suite/bin" >> $GITHUB_PATH
          echo "OSS_CAD_SUITE=$GITHUB_WORKSPACE/oss-cad-suite" >> $GITHUB_ENV
          echo "YOSYS_SV_BIN=$GITHUB_WORKSPACE/oss-cad-suite/bin/yosys" >> $GITHUB_ENV
          echo "SBY_BIN=$GITHUB_WORKSPACE/oss-cad-suite/bin/sby"       >> $GITHUB_ENV

      - name: Smoke-check tools
        run: |
          set -euxo pipefail
          verilator --version
          "$YOSYS_SV_BIN" -V | head -n1
          "$SBY_BIN" --help | head -n1

      - name: Tool env
        run: make env

      - name: Lint
        run: make lint

      - name: Check (seeded)
        run: make check SEED=${{ github.run_id }}

      - name: Synthesis
        run: make synth

      - name: Formal (prove)
        run: make formal_all

      - name: Dashboards & Badge
        run: |
          make dashboards
          make badge

      - name: JUnit + Artifacts
        run: make junit

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/

      - name: Publish site
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports/site
