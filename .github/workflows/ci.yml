name: spec2rtl

on:
  push:
  pull_request:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install EDA
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y verilator jq python3-venv python3-pip gh boolector z3
          python3 -m pip install --upgrade pip
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/oss-cad-suite/bin" >> $GITHUB_PATH
          INFO=$(gh release view -R YosysHQ/oss-cad-suite-build --json tagName,assets)
          TAG=$(printf '%s' "$INFO" | jq -r .tagName)
          ASSET=$(printf '%s' "$INFO" | jq -r '.assets[].name' | grep -E '^oss-cad-suite-linux-x64.*\.(tar\.xz|tgz)$' | head -n1)
          gh release download -R YosysHQ/oss-cad-suite-build "$TAG" -p "$ASSET" -O /tmp/$ASSET
          mkdir -p "$GITHUB_WORKSPACE/oss-cad-suite"
          tar xf /tmp/$ASSET -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1
          echo "YOSYS_SV_BIN=$GITHUB_WORKSPACE/oss-cad-suite/bin/yosys" >> $GITHUB_ENV
          set -euo pipefail
          ./tools/yosys-sv -Q -p "help read_systemverilog" | head -n 3
          sby --version
          boolector --version || true
          z3 --version || true

      - name: Python deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Env & spec
        run: |
          . .venv/bin/activate
          make env
          make spec
      - name: Lint + report + gates
        env:
          REPORTS_DIR: reports/ci_smoke
          SEED: 42
        run: |
          . .venv/bin/activate
          make lint
          make report
          python3 scripts/check_gates.py --policies policies.yml --reports "$REPORTS_DIR"
      - name: Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smoke-reports
          path: reports/ci_smoke/**

  full:
    runs-on: ubuntu-latest
    needs: smoke
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install EDA
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y verilator jq python3-venv python3-pip gh boolector z3
          python3 -m pip install --upgrade pip
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/oss-cad-suite/bin" >> $GITHUB_PATH
          INFO=$(gh release view -R YosysHQ/oss-cad-suite-build --json tagName,assets)
          TAG=$(printf '%s' "$INFO" | jq -r .tagName)
          ASSET=$(printf '%s' "$INFO" | jq -r '.assets[].name' | grep -E '^oss-cad-suite-linux-x64.*\.(tar\.xz|tgz)$' | head -n1)
          gh release download -R YosysHQ/oss-cad-suite-build "$TAG" -p "$ASSET" -O /tmp/$ASSET
          mkdir -p "$GITHUB_WORKSPACE/oss-cad-suite"
          tar xf /tmp/$ASSET -C "$GITHUB_WORKSPACE/oss-cad-suite" --strip-components=1
          echo "YOSYS_SV_BIN=$GITHUB_WORKSPACE/oss-cad-suite/bin/yosys" >> $GITHUB_ENV
          set -euo pipefail
          ./tools/yosys-sv -Q -p "help read_systemverilog" | head -n 3
          sby --version
          boolector --version || true
          z3 --version || true

      - name: Python deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: UHDM synth + formal + mutate
        env:
          REPORTS_DIR: reports/ci
          SEED: 12345
          YOSYS_SV_BIN: ${{ env.YOSYS_SV_BIN }}
        run: |
          . .venv/bin/activate
          ./tools/yosys-sv -Q -p "help read_systemverilog" | head -n 3
          make quick
          make synth
          make formal_core || true
          make mutate
          python3 scripts/check_gates.py --policies policies.yml --reports "$REPORTS_DIR"
      - name: Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: full-reports
          path: reports/ci/**
